{"version":3,"file":"index.js","sources":["../node_modules/svelte-preprocess-filter/out/module.js","../src/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nfunction style({ name, all = false, type = true, lang = true } = {}, { attributes } = {}) {\n  if (all) {\n    return true;\n  }\n\n  if (!name) {\n    throw new Error('Missing \\'name\\' filter option');\n  }\n  if (!attributes) {\n    throw new Error('No attributes passed to filter');\n  }\n\n  const typeAttributes = [type && attributes.type, lang && attributes.lang];\n\n  return typeAttributes.includes(name) || typeAttributes.includes(`text/${name}`);\n}\n\nexport { style };\n//# sourceMappingURL=module.js.map\n","import { dirname } from 'path';\nimport sassCompiler from 'node-sass';\nimport { style as filter } from 'svelte-preprocess-filter';\n\nexport async function preprocessSass(\n  sassOptions = {},\n  filterOptions = {},\n  { filename, content, attributes }\n) {\n  // Detect if styles should be processed and in we should use sass (indented) syntax.\n  let indentedSyntax;\n  let processStyles;\n\n  if (filterOptions.name === undefined) {\n    indentedSyntax = filter({ name: 'sass', ...filterOptions }, { attributes });\n    processStyles = indentedSyntax || filter({ name: 'scss', ...filterOptions }, { attributes });\n  } else {\n    indentedSyntax = filterOptions.name === 'sass';\n    processStyles = filter(filterOptions, { attributes });\n  }\n\n  if (!processStyles) return null;\n\n  const { css, map, stats } = await new Promise((resolve, reject) => sassCompiler.render({\n    file: filename,\n    data: content,\n    includePaths: [\n      dirname(filename),\n    ],\n    indentedSyntax,\n    ...sassOptions,\n  }, (err, result) => {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(result);\n    }\n  }));\n\n  return { code: css.toString(), map, dependencies: stats.includedFiles };\n}\n\nexport function sass(sassOptions, filterOptions) {\n  return preprocessSass.bind(null, sassOptions, filterOptions);\n}\n"],"names":["all","type","lang","typeAttributes","attributes","name","preprocessSass","sassOptions","filterOptions","filename","content","indentedSyntax","processStyles","undefined","filter","css","map","stats","Promise","resolve","reject","sassCompiler","render","file","data","includePaths","dirname","err","result","code","toString","dependencies","includedFiles","sass","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEO,SAAA,KAAA,CAAe;AAAA,EAAA,IAAA;AAAQA,EAAAA,GAAAA,GAAR,KAAA;AAAqBC,EAAAA,IAAAA,GAArB,IAAA;AAAkCC,EAAAA,IAAAA,GAAlC;AAAA,IAAf,EAAA,EAAqE;AAAA,EAAA;AAAA,IAArE,EAAA,EAA0F;MAC/F,KAAS;WAAE;;;MAEP,CAAJ,MAAW;UACH,IAAA,KAAA,CAAN,gCAAM;;;MAEJ,CAAJ,YAAiB;UACT,IAAA,KAAA,CAAN,gCAAM;;;QAGFC,cAAAA,GAAiB,CACpBF,IAAAA,IAAQG,UAAAA,CADY,IAAA,EAEpBF,IAAAA,IAAQE,UAAAA,CAFX,IAAuB;SAKhBD,cAAAA,CAAAA,QAAAA,CAAAA,IAAAA,KAAiCA,cAAAA,CAAAA,QAAAA,CAAyB,QAAOE,IAAxE,EAAwCF;;;ACbnC,eAAeG,cAAf,CACLC,WAAW,GAAG,EADT,EAELC,aAAa,GAAG,EAFX,EAGL;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBN,EAAAA;AAArB,CAHK,EAIL;AACA;AACA,MAAIO,cAAJ;AACA,MAAIC,aAAJ;;AAEA,MAAIJ,aAAa,CAACH,IAAd,KAAuBQ,SAA3B,EAAsC;AACpCF,IAAAA,cAAc,GAAGG,KAAM;AAAGT,MAAAA,IAAI,EAAE;AAAT,OAAoBG,aAApB,GAAqC;AAAEJ,MAAAA;AAAF,KAArC,CAAvB;AACAQ,IAAAA,aAAa,GAAGD,cAAc,IAAIG,KAAM;AAAGT,MAAAA,IAAI,EAAE;AAAT,OAAoBG,aAApB,GAAqC;AAAEJ,MAAAA;AAAF,KAArC,CAAxC;AACD,GAHD,MAGO;AACLO,IAAAA,cAAc,GAAGH,aAAa,CAACH,IAAd,KAAuB,MAAxC;AACAO,IAAAA,aAAa,GAAGE,KAAM,CAACN,aAAD,EAAgB;AAAEJ,MAAAA;AAAF,KAAhB,CAAtB;AACD;;AAED,MAAI,CAACQ,aAAL,EAAoB,OAAO,IAAP;AAEpB,QAAM;AAAEG,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAAsB,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqBC,YAAY,CAACC,MAAb;AACjEC,IAAAA,IAAI,EAAEd,QAD2D;AAEjEe,IAAAA,IAAI,EAAEd,OAF2D;AAGjEe,IAAAA,YAAY,EAAE,CACZC,YAAO,CAACjB,QAAD,CADK,CAHmD;AAMjEE,IAAAA;AANiE,KAO9DJ,WAP8D,GAQhE,CAACoB,GAAD,EAAMC,MAAN,KAAiB;AAClB,QAAID,GAAJ,EAAS;AACPP,MAAAA,MAAM,CAACO,GAAD,CAAN;AACD,KAFD,MAEO;AACLR,MAAAA,OAAO,CAACS,MAAD,CAAP;AACD;AACF,GAdkE,CAAjC,CAAlC;AAgBA,SAAO;AAAEC,IAAAA,IAAI,EAAEd,GAAG,CAACe,QAAJ,EAAR;AAAwBd,IAAAA,GAAxB;AAA6Be,IAAAA,YAAY,EAAEd,KAAK,CAACe;AAAjD,GAAP;AACD;AAEM,SAASC,IAAT,CAAc1B,WAAd,EAA2BC,aAA3B,EAA0C;AAC/C,SAAOF,cAAc,CAAC4B,IAAf,CAAoB,IAApB,EAA0B3B,WAA1B,EAAuCC,aAAvC,CAAP;AACD;;;;;"}